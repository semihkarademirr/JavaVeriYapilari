
public class QueuArray<T> {

	
	Object [] ArrayQueu;
	int rear, front, maxSize, nItems;
	
	public QueuArray(int size) {
		
		this.maxSize = size;
		ArrayQueu = new Object[this.maxSize];
		front = 0;
		rear = -1;
		nItems = 0;		
	}
	
	public void enqueue(Object o) {
		if(isFull()) {			
			System.out.println("Masalar覺m覺z覺n Hepsi Doludur S覺rada Bekleyiniz.");
			return;
		}
		rear++;
		ArrayQueu[rear] = o;
		nItems++;
	}
	
	public  T dequeue () {
		if (isEmpty()) {
			System.out.println("Masalarimiz bostur isterseniz oturabilirsiniz.");
			return null;
		}
		T objectOut =(T) ArrayQueu[front];
		for(int i = 1; i < rear+1; i++) {
			T tmp;
			tmp = (T) ArrayQueu[i];
			ArrayQueu[i-1] = tmp;
		}
		ArrayQueu[rear] = null;
		nItems--;
		rear--;
		System.out.println("Masamiz bosalmistir.");
		return objectOut;
	}


	public  boolean isEmpty() {
		
		return (nItems == 0);
	}

	public boolean isFull() {
		
		return (nItems == maxSize);
	}
	
	public void printer() {
		
		System.out.println("Siradaki Musterilerimizin siralanmasi");
		for(int i = 0; i < ArrayQueu.length; i++) {
			
			System.out.println("RESTAURATIMIZA HOSGELDINIZ MASA  ["+ (i+1) + "]" + ArrayQueu[i] );
		}
	}
	
}
